{"version":3,"sources":["utils/constants/news.js","utils/constants/info.js","utils/constants/newsSaga.js","saga/news/getNewsSaga.js","utils/links/index.js","actions/news/index.js","actions/info/index.js","saga/index.js","reducers/news/index.js","reducers/info/index.js","store.js","components/app/AppBarComponent.js","components/news/OneNew.js","components/news/SelectCountry.js","utils/data/Countries.js","components/news/ArticlesPerPage.js","components/news/index.js","actions/newsSaga/index.js","containers/news/index.js","components/app/index.js","components/info/index.js","containers/info/index.js","index.js"],"names":["SET_NEWS","CHOOSE_COUNTRY","CHANGE_ARTICLES_PER_PAGE","SET_MESSAGE_INFO","GET_NEWS_SAGA","getNewsSaga","watchGetNewsSaga","select","state","news","query","country","articlesPerPage","from","call","axios","get","params","q","undefined","code","toLowerCase","max","token","result","put","articles","data","type","message","text","takeEvery","mainSaga","all","initialState","label","phone","Date","toJSON","slice","News","action","Info","reducers","messageInfo","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","useStyles","makeStyles","theme","appBar","zIndex","drawer","backgroundColor","toolBar","paddingLeft","iconBtn","margin","color","palette","success","light","title","flexGrow","AppBarComponent","classes","AppBar","position","className","Toolbar","IconButton","onClick","window","scrollTo","Home","Typography","variant","root","textAlign","overflowWrap","div","display","placeContent","divider","primary","media","height","marginTop","paddingTop","OneNew","oneNew","description","url","image","publishedAt","source","Box","border","p","name","substr","Divider","Link","href","CardMedia","SelectCountry","style","countries","onChooseCountry","Autocomplete","id","options","autoHighlight","getOptionLabel","option","onChange","e","v","value","renderOption","Fragment","isoCode","String","fromCodePoint","toUpperCase","replace","char","charCodeAt","renderInput","TextField","inputProps","autoComplete","defaultProps","suggested","ArticlesPerPage","onChangeArticlesPerPage","InputProps","min","parseInt","target","fontSize","marginRight","minWidth","fetchNews","useEffect","Container","Grid","container","spacing","map","item","sm","key","getNews","connect","dispatch","chooseCountry","changeArticlesPerPage","toolbar","mixins","content","padding","App","CssBaseline","width","Alert","props","elevation","MessageInfo","handleClose","onClose","event","reason","Snackbar","open","autoHideDuration","severity","createTheme","main","secondary","render","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.3dca73ed.chunk.js","sourcesContent":["export const SET_NEWS = \"SET_NEWS\";\nexport const CHOOSE_COUNTRY = \"CHOOSE_COUNTRY\";\nexport const CHANGE_ARTICLES_PER_PAGE = \"CHANGE_ARTICLES_PER_PAGE\";\n\nexport const API_KEY = \"7cf09c74af487e191a3607d45444463b\";","export const SET_MESSAGE_INFO = \"SET_MESSAGE_INFO\";","export const GET_NEWS_SAGA = \"GET_NEWS_SAGA\";","import axios from \"axios\";\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\nimport { setNews } from \"../../actions/news\";\nimport { setMessageInfo } from \"../../actions/info\";\nimport { API_KEY } from \"../../utils/constants/news\";\nimport { NEWS_API } from \"../../utils/links\";\nimport { GET_NEWS_SAGA } from \"../../utils/constants/newsSaga\";\n\nexport function* getNewsSaga() {\n    try {\n        const { query, country, articlesPerPage, from } = yield select(state => state.news);\n\n        const result = yield call(\n            axios.get,\n            NEWS_API,\n            {\n                params: {\n                    q: query,\n                    country: country === \"\" ? undefined : country.code.toLowerCase(),\n                    max: articlesPerPage,\n                    from,\n                    token: API_KEY\n                }\n            }\n        );\n\n        yield put(setNews(result.data.articles));\n    } catch (e) {\n        yield put(setMessageInfo({ type: \"error\", text: e.message }));\n    }\n}\n\nexport function* watchGetNewsSaga() {\n    yield takeEvery(GET_NEWS_SAGA, getNewsSaga);\n}","export const NEWS_API = \"https://gnews.io/api/v4/search\";","import { CHANGE_ARTICLES_PER_PAGE, CHOOSE_COUNTRY, SET_NEWS } from \"../../utils/constants/news\";\n\nexport const setNews = (articles) => ({\n    type: SET_NEWS,\n    articles\n});\n\nexport const chooseCountry = (country) => ({\n    type: CHOOSE_COUNTRY,\n    country\n});\n\nexport const changeArticlesPerPage = (articlesPerPage) => ({\n    type: CHANGE_ARTICLES_PER_PAGE,\n    articlesPerPage\n});\n","import { SET_MESSAGE_INFO } from \"../../utils/constants/info\";\n\nexport const setMessageInfo = (message) => ({\n    type: SET_MESSAGE_INFO,\n    message\n});\n\nexport const closeMessage = () => ({\n    type: SET_MESSAGE_INFO,\n    message: null\n});\n","import { all } from \"redux-saga/effects\";\nimport { watchGetNewsSaga } from \"./news/getNewsSaga\";\n\nexport default function* mainSaga() {\n    yield all([\n        watchGetNewsSaga()\n    ]);\n}","import { CHANGE_ARTICLES_PER_PAGE, CHOOSE_COUNTRY, SET_NEWS } from \"../../utils/constants/news\";\n\nconst initialState = {\n    articles: [],\n    query: \"a\",\n    country: {\n        code: \"UA\",\n        label: \"Ukraine\",\n        phone: \"380\"\n    },\n    articlesPerPage: 5,\n    from: new Date().toJSON().slice(0, 10)\n};\n\nconst News = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_NEWS: {\n            return {\n                ...state,\n                articles: action.articles\n            };\n        }\n        case CHOOSE_COUNTRY: {\n            return {\n                ...state,\n                country: action.country\n            };\n        }\n        case CHANGE_ARTICLES_PER_PAGE: {\n            return {\n                ...state,\n                articlesPerPage: action.articlesPerPage\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default News;","import { SET_MESSAGE_INFO } from \"../../utils/constants/info\";\n\nconst initialState = { message: null };\n\nconst Info = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_MESSAGE_INFO: {\n            return {\n                ...state,\n                message: action.message\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport default Info;","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport mainSaga from \"./saga\";\nimport news from \"./reducers/news\";\nimport messageInfo from \"./reducers/info\";\n\nconst reducers = {\n    news,\n    messageInfo\n};\n\nconst rootReducer = combineReducers(reducers);\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\n\nsagaMiddleware.run(mainSaga);\n\nexport default store;","import React from \"react\";\nimport { AppBar, IconButton, Toolbar, Typography } from \"@material-ui/core\";\nimport { Home } from \"@material-ui/icons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        zIndex: theme.zIndex.drawer + 1,\n        backgroundColor: \"#2E3336\"\n    },\n    toolBar: {\n        paddingLeft: 5\n    },\n    iconBtn: {\n        margin: 0,\n        \"&:hover\": {\n            color: theme.palette.success.light\n        }\n    },\n    title: {\n        flexGrow: 1,\n        paddingLeft: 10\n    }\n}));\n\nconst AppBarComponent = () => {\n    const classes = useStyles();\n\n    return (\n        <AppBar position={\"fixed\"} className={classes.appBar}>\n            <Toolbar className={classes.toolBar}>\n                <IconButton\n                    className={classes.iconBtn}\n                    onClick={() => window.scrollTo(0, 0)}\n                >\n                    <Home/>\n                </IconButton>\n\n                <Typography variant={\"h5\"} className={classes.title}>\n                    GNews\n                </Typography>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default AppBarComponent;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Box, CardMedia, Divider, Link, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        textAlign: \"left\",\n        overflowWrap: \"break-word\"\n    },\n    div: {\n        display: \"flex\",\n        placeContent: \"space-between\"\n    },\n    divider: {\n        margin: \"1% 0\",\n        backgroundColor: theme.palette.primary.light\n    },\n    media: {\n        height: 0,\n        marginTop: 20,\n        paddingTop: \"56.25%\"\n    }\n}));\n\nconst OneNew = ({ oneNew }) => {\n    const classes = useStyles();\n    const { title, description, url, image, publishedAt, source } = oneNew;\n\n    return (\n        <Box border={1} p={5} className={classes.root}>\n            <div className={classes.div}>\n                <Typography\n                    variant={\"subtitle1\"}\n                    color={\"secondary\"}\n                >\n                    {source.name}\n                </Typography>\n\n                <Typography\n                    variant={\"subtitle2\"}\n                    color={\"secondary\"}\n                >\n                    {publishedAt.substr(0, 10)}\n                </Typography>\n            </div>\n\n            <Divider className={classes.divider}/>\n\n            {\n                title && (\n                    <>\n                        <Typography\n                            variant={\"h4\"}\n                            color={\"primary\"}\n                        >\n                            {title}\n                        </Typography>\n                        <Divider className={classes.divider}/>\n                    </>\n                )\n            }\n\n            {\n                description && (\n                    <>\n                        <Typography\n                            variant={\"h5\"}\n                            color={\"inherit\"}\n                        >\n                            {description}\n                        </Typography>\n                        <Divider className={classes.divider}/>\n                    </>\n                )\n            }\n\n            {\n                url && (\n                    <Link\n                        variant={\"subtitle2\"}\n                        color={\"secondary\"}\n                        href={url}\n                    >\n                        {url}\n                    </Link>\n                )\n            }\n\n            {\n                image && (\n                    <CardMedia\n                        className={classes.media}\n                        image={image}\n                    />\n                )\n            }\n        </Box>\n    );\n};\n\nOneNew.propTypes = {\n    oneNew: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n        url: PropTypes.string.isRequired,\n        image: PropTypes.string.isRequired,\n        publishedAt: PropTypes.string.isRequired,\n        source: PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            url: PropTypes.string.isRequired\n        }).isRequired\n    }).isRequired\n};\n\nexport default OneNew;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Autocomplete } from \"@material-ui/lab\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Countries } from \"../../utils/data/Countries\";\n\nfunction countryToFlag(isoCode) {\n    return typeof String.fromCodePoint !== \"undefined\"\n        ? isoCode.toUpperCase().replace(/./g, char => String.fromCodePoint(char.charCodeAt(0) + 127397))\n        : isoCode;\n}\n\nconst SelectCountry = ({ style, countries, country, onChooseCountry }) => (\n    <Autocomplete\n        id={\"country-select-demo\"}\n        className={style}\n        options={countries}\n        autoHighlight\n        getOptionLabel={(option) => option.label ? option.label : \"\"}\n        onChange={(e, v) => onChooseCountry(v ? v : \"\")}\n        value={country}\n        renderOption={(option) => (\n            <React.Fragment>\n                <span>{countryToFlag(option.code)}</span>\n                {option.label} ({option.code}) +{option.phone}\n            </React.Fragment>\n        )}\n        renderInput={(params) => (\n            <TextField\n                {...params}\n                label={\"Choose a country\"}\n                variant={\"outlined\"}\n                inputProps={{\n                    ...params.inputProps,\n                    autoComplete: \"off\"\n                }}\n            />\n        )}\n    />\n);\n\nSelectCountry.defaultProps = {\n    countries: Countries\n};\n\nSelectCountry.propTypes = {\n    style: PropTypes.string.isRequired,\n    country: PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n    onChooseCountry: PropTypes.func.isRequired\n};\n\nexport default SelectCountry;","export const Countries = [\n    { code: \"AU\", label: \"Australia\", phone: \"61\", suggested: true },\n    { code: \"BR\", label: \"Brazil\", phone: \"55\" },\n    { code: \"CA\", label: \"Canada\", phone: \"1\", suggested: true },\n    { code: \"CH\", label: \"Switzerland\", phone: \"41\" },\n    { code: \"CN\", label: \"China\", phone: \"86\" },\n    { code: \"DE\", label: \"Germany\", phone: \"49\", suggested: true },\n    { code: \"EG\", label: \"Egypt\", phone: \"20\" },\n    { code: \"ES\", label: \"Spain\", phone: \"34\" },\n    { code: \"FR\", label: \"France\", phone: \"33\", suggested: true },\n    { code: \"GB\", label: \"United Kingdom\", phone: \"44\" },\n    { code: \"GR\", label: \"Greece\", phone: \"30\" },\n    { code: \"HK\", label: \"Hong Kong\", phone: \"852\" },\n    { code: \"IE\", label: \"Ireland\", phone: \"353\" },\n    { code: \"IL\", label: \"Israel\", phone: \"972\" },\n    { code: \"IN\", label: \"India\", phone: \"91\" },\n    { code: \"IT\", label: \"Italy\", phone: \"39\" },\n    { code: \"JP\", label: \"Japan\", phone: \"81\", suggested: true },\n    { code: \"NL\", label: \"Netherlands\", phone: \"31\" },\n    { code: \"NO\", label: \"Norway\", phone: \"47\" },\n    { code: \"PE\", label: \"Peru\", phone: \"51\" },\n    { code: \"PH\", label: \"Philippines\", phone: \"63\" },\n    { code: \"PK\", label: \"Pakistan\", phone: \"92\" },\n    { code: \"PT\", label: \"Portugal\", phone: \"351\" },\n    { code: \"RO\", label: \"Romania\", phone: \"40\" },\n    { code: \"RU\", label: \"Russian Federation\", phone: \"7\" },\n    { code: \"SE\", label: \"Sweden\", phone: \"46\" },\n    { code: \"SG\", label: \"Singapore\", phone: \"65\" },\n    { code: \"TW\", label: \"Taiwan, Province of China\", phone: \"886\" },\n    { code: \"UA\", label: \"Ukraine\", phone: \"380\" },\n    { code: \"US\", label: \"United States\", phone: \"1\", suggested: true }\n];","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst ArticlesPerPage = ({ style, articlesPerPage, onChangeArticlesPerPage }) => (\n    <TextField\n        className={style}\n        label={\"Enter the number of articles per page\"}\n        variant={\"outlined\"}\n        type={\"number\"}\n        InputProps={{ inputProps: { min: 1, max: 10 } }}\n        value={articlesPerPage}\n        onChange={(e) => parseInt(onChangeArticlesPerPage(e.target.value))}\n    />\n);\n\nArticlesPerPage.propTypes = {\n    style: PropTypes.string.isRequired,\n    articlesPerPage: PropTypes.number.isRequired,\n    onChangeArticlesPerPage: PropTypes.func.isRequired\n};\n\nexport default ArticlesPerPage;","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport key from \"weak-key\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport OneNew from \"./OneNew\";\nimport SelectCountry from \"./SelectCountry\";\nimport ArticlesPerPage from \"./ArticlesPerPage\";\n\nconst useStyles = makeStyles({\n    div: {\n        display: \"flex\",\n        margin: \"0 0 20px\"\n    },\n    option: {\n        fontSize: 16,\n        \"& > span\": {\n            marginRight: 10,\n            fontSize: 18\n        },\n        minWidth: \"25%\",\n        marginRight: 50\n    }\n});\n\nconst News = ({ articles, country, articlesPerPage, fetchNews, onChooseCountry, onChangeArticlesPerPage }) => {\n    const classes = useStyles();\n\n    useEffect(() => {\n        fetchNews();\n    }, [fetchNews]);\n\n    return (\n        <Container>\n            <div className={classes.div}>\n                <SelectCountry\n                    style={classes.option}\n                    country={country}\n                    onChooseCountry={(country) => onChooseCountry(country)}\n                />\n\n                <ArticlesPerPage\n                    style={classes.option}\n                    articlesPerPage={articlesPerPage}\n                    onChangeArticlesPerPage={onChangeArticlesPerPage}\n                />\n            </div>\n\n            <Grid container spacing={5}>\n                {\n                    articles ? articles.map((item) => (\n                        <Grid key={key(item)} item sm={12}>\n                            <OneNew oneNew={item}/>\n                        </Grid>\n                    )) : \"\"\n                }\n            </Grid>\n        </Container>\n    );\n};\n\nNews.propTypes = {\n    articles: PropTypes.arrayOf(\n        PropTypes.shape({\n            title: PropTypes.string.isRequired,\n            description: PropTypes.string.isRequired,\n            content: PropTypes.string.isRequired,\n            url: PropTypes.string.isRequired,\n            image: PropTypes.string.isRequired,\n            publishedAt: PropTypes.string.isRequired,\n            source: PropTypes.shape({\n                name: PropTypes.string.isRequired,\n                url: PropTypes.string.isRequired\n            }).isRequired\n        }).isRequired\n    ).isRequired,\n    country: PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n    articlesPerPage: PropTypes.number.isRequired,\n    fetchNews: PropTypes.func.isRequired,\n    onChooseCountry: PropTypes.func.isRequired,\n    onChangeArticlesPerPage: PropTypes.func.isRequired\n};\n\nexport default News;","import { GET_NEWS_SAGA } from \"../../utils/constants/newsSaga\";\n\nexport const getNews = () => ({\n    type: GET_NEWS_SAGA\n});","import { connect } from \"react-redux\";\nimport News from \"../../components/news\";\nimport { getNews } from \"../../actions/newsSaga\";\nimport { changeArticlesPerPage, chooseCountry } from \"../../actions/news\";\n\nconst mapStateToProps = (state) => {\n    return {\n        articles: state.news.articles,\n        country: state.news.country,\n        articlesPerPage: state.news.articlesPerPage\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchNews: () => dispatch(getNews()),\n        onChooseCountry: (country) => {\n            dispatch(chooseCountry(country));\n            dispatch(getNews());\n        },\n        onChangeArticlesPerPage: (articlesPerPage) => {\n            dispatch(changeArticlesPerPage(articlesPerPage));\n            dispatch(getNews());\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(News);","import React from \"react\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBarComponent from \"./AppBarComponent\";\nimport News from \"../../containers/news\";\n\nconst useStyles = makeStyles((theme) => ({\n    toolbar: theme.mixins.toolbar,\n    root: {\n        display: \"flex\"\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    }\n}));\n\nconst App = () => {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline/>\n            <AppBarComponent/>\n\n            <main className={classes.content}>\n                <div className={classes.toolbar}/>\n                <News/>\n            </main>\n        </div>\n    );\n};\n\nexport default App;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Snackbar } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"100%\",\n        \"& > * + *\": {\n            marginTop: theme.spacing(2)\n        }\n    }\n}));\n\nfunction Alert(props) {\n    return <MuiAlert elevation={6} variant={\"filled\"} {...props} />;\n}\n\nconst MessageInfo = ({ message, handleClose }) => {\n    const classes = useStyles();\n    const { type, text } = message || {};\n\n    const onClose = (event, reason) => {\n        if (reason === \"clickaway\") {\n            return;\n        }\n        handleClose();\n    };\n\n    return (\n        <>\n            {\n                message && (\n                    <div className={classes.root}>\n                        <Snackbar open autoHideDuration={6000} onClose={onClose}>\n                            <Alert onClose={onClose} severity={type}>\n                                {text}\n                            </Alert>\n                        </Snackbar>\n                    </div>\n                )\n            }\n        </>\n    );\n};\n\nMessageInfo.propTypes = {\n    message: PropTypes.object,\n    handleClose: PropTypes.func.isRequired\n};\n\nexport default MessageInfo;","import { connect } from \"react-redux\";\nimport MessageInfo from \"../../components/info\";\nimport { closeMessage } from \"../../actions/info\";\n\nconst mapStateToProps = (state) => {\n    return {\n        message: state.messageInfo.message\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        handleClose: () => dispatch(closeMessage())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageInfo);","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport store from \"./store\";\nimport App from \"./components/app\";\nimport MessageInfo from \"./containers/info\";\n\nconst theme = createTheme({\n    palette: {\n        type: \"dark\",\n        primary: {\n            main: \"#334e8b\"\n        },\n        secondary: {\n            main: \"#d13e45\"\n        }\n    }\n});\n\nrender(\n    <ThemeProvider theme={theme}>\n        <Provider store={store}>\n            <App/>\n            <MessageInfo/>\n        </Provider>\n    </ThemeProvider>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}